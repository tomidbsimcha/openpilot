#include <unistd.h>

#include "common/swaglog.h"

#include "pigeon.h"

Pigeon::Pigeon(Panda * panda) : panda(panda){
  init();
}

void Pigeon::init() {
  usleep(1000*1000);
  LOGW("panda GPS start");

  // power off pigeon
  set_power(0);
  usleep(100*1000);

  // 9600 baud at init
  set_baud(9600);

  // power on pigeon
  set_power(1);
  usleep(500*1000);

  // baud rate upping
  send("\x24\x50\x55\x42\x58\x2C\x34\x31\x2C\x31\x2C\x30\x30\x30\x37\x2C\x30\x30\x30\x33\x2C\x34\x36\x30\x38\x30\x30\x2C\x30\x2A\x31\x35\x0D\x0A");
  usleep(100*1000);

  // set baud rate to 460800
  set_baud(460800);
  usleep(100*1000);

  // init from ubloxd
  // To generate this data, run test/ubloxd.py with the print statements enabled in the write function in panda/python/serial.py
  send("\xB5\x62\x06\x00\x14\x00\x03\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x1E\x7F");
  send("\xB5\x62\x06\x3E\x00\x00\x44\xD2");
  send("\xB5\x62\x06\x00\x14\x00\x00\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x19\x35");
  send("\xB5\x62\x06\x00\x14\x00\x01\x00\x00\x00\xC0\x08\x00\x00\x00\x08\x07\x00\x01\x00\x01\x00\x00\x00\x00\x00\xF4\x80");
  send("\xB5\x62\x06\x00\x14\x00\x04\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1D\x85");
  send("\xB5\x62\x06\x00\x00\x00\x06\x18");
  send("\xB5\x62\x06\x00\x01\x00\x01\x08\x22");
  send("\xB5\x62\x06\x00\x01\x00\x02\x09\x23");
  send("\xB5\x62\x06\x00\x01\x00\x03\x0A\x24");
  send("\xB5\x62\x06\x08\x06\x00\x64\x00\x01\x00\x00\x00\x79\x10");
  send("\xB5\x62\x06\x24\x24\x00\x05\x00\x04\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x5A\x63");
  send("\xB5\x62\x06\x1E\x14\x00\x00\x00\x00\x00\x01\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3C\x37");
  send("\xB5\x62\x06\x24\x00\x00\x2A\x84");
  send("\xB5\x62\x06\x23\x00\x00\x29\x81");
  send("\xB5\x62\x06\x1E\x00\x00\x24\x72");
  send("\xB5\x62\x06\x01\x03\x00\x01\x07\x01\x13\x51");
  send("\xB5\x62\x06\x01\x03\x00\x02\x15\x01\x22\x70");
  send("\xB5\x62\x06\x01\x03\x00\x02\x13\x01\x20\x6C");
  send("\xB5\x62\x06\x01\x03\x00\x0A\x09\x01\x1E\x70");

  LOGW("panda GPS on");
}

void Pigeon::set_baud(int baud) {
  panda->usb_write(0xe2, 1, 0);
  panda->usb_write(0xe4, 1, baud/300);
}

void Pigeon::send(std::string s) {
  int len = s.length();
  const char * dat = s.data();

  unsigned char a[0x20+1];
  a[0] = 1;
  for (int i=0; i<len; i+=0x20) {
    int ll = std::min(0x20, len-i);
    memcpy(&a[1], &dat[i], ll);

    panda->usb_bulk_write(2, a, ll+1);
  }
}


// return vector?
int Pigeon::receive(unsigned char * dat) {
  int alen = 0;

  while (alen < 0xfc0) {
    int len = panda->usb_read(0xe0, 1, 0, dat+alen, 0x40);
    if (len <= 0) break;
    alen += len;
  }

  return alen;
}

void Pigeon::set_power(int power) {
  panda->usb_write(0xd9, power, 0);
}
